@using MixERP.Purchases.Extensions
@model dynamic

@{
    ViewBag.Title = I18N.Purchase;
    Layout = ViewBag.PurchaseLayoutPath;
}

@Html.PartialView("Shared/ItemList.cshtml", TenantConvention.GetTenant())


<script>
    $(".page.title").html(window.translate("PurchaseReturn"));
    $("#CheckoutButton").off("click").on("click", function () {

        function request(model) {
            const url = "/dashboard/purchase/tasks/return/new";
            const data = JSON.stringify(model);
            return window.getAjaxRequest(url, "POST", data);
        };

        function getModel() {
            function getDetails() {
                const items = $("#PurchaseItems .item");
                var model = [];

                $.each(items, function () {
                    const el = $(this);
                    const itemId = parseInt(el.attr("data-item-id"));
                    const quantity = parseInt(el.find("input.quantity").val());
                    const unitId = parseInt(el.find("select.unit").val());
                    const price = parseFloat(el.find("input.price").val() || 0);
                    const discount = parseFloat(el.find("input.discount").val() || 0);
                    const tax = parseFloat(el.find(".tax-amount").html() || 0);

                    model.push({
                        StoreId: $("#StoreSelect").val(),
                        ItemId: itemId,
                        Quantity: quantity,
                        Tax: tax,
                        UnitId: unitId,
                        Price: price,
                        Discount: discount
                    });
                });

                return model;
            };

            const transactionMasterId = parseInt(window.getQueryStringByName("TransactionMasterId") || 0);
            const valueDate = $("#ValueDateInputDate").datepicker("getDate");
            const bookDate = $("#BookDateInputDate").datepicker("getDate");
            const costCenterId = $("#CostCenterSelect").val();
            const referenceNumber = $("#ReferenceNumberInputText").val();
            const statementReference = $("#StatementReferenceInputText").val();
            const supplierId = $("#SupplierSelect").val();
            const priceTypeId = $("#PriceTypeSelect").val();
            const shipperId = $("#ShipperSelect").val();
            const storeId = $("#StoreSelect").val();
            const details = getDetails();

            return {
                TransactionMasterId: transactionMasterId,
                ValueDate: valueDate,
                BookDate: bookDate,
                CostCenterId: costCenterId,
                ReferenceNumber: referenceNumber,
                StatementReference: statementReference,
                SupplierId: supplierId,
                PriceTypeId: priceTypeId,
                ShipperId: shipperId,
                StoreId: storeId,
                Details: details
            };
        };

        const model = getModel();

        if (!model.TransactionMasterId) {
            alert(window.translate("AccessDenied"));
            document.location = "/dashboard/purchase/tasks/entry";
            return;
        };

        if (!model.Details.length) {
            window.displayMessage(window.translate("PleaseSelectItem"));
            return;
        };

        const confirmed = confirm(window.translate("AreYouSure"));

        if (!confirmed) {
            return;
        };


        $("#CheckoutButton").addClass("loading");

        const ajax = request(model);

        ajax.success(function (response) {
            const id = response;
            document.location = "/dashboard/purchase/tasks/return/checklist/" + id;
        });

        ajax.fail(function (xhr) {
            $("#CheckoutButton").removeClass("loading");
            window.logAjaxErrorMessage(xhr);
        });
    });
</script>
